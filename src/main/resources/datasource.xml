<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
    http://www.springframework.org/schema/jee 
    http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<!-- 1) 连接池实例 -->
	<!-- c3p0+mysql5专用的连接数据源 -->
	<!-- 
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> 
			<property name="driverClass" value="com.mysql.jdbc.Driver"></property> 
			<property name="jdbcUrl" value="jdbc:mysql:///log_sys"></property> 
			<property name="user" value="root"></property> 
			<property name="password" value="cjshnb"></property> 
			<property name="initialPoolSize" value="3"></property> 
			<property name="maxPoolSize" value="6"></property> 
		</bean> 
	-->
	<!-- c3p0+mysql8的连接数据源 -->
	<!-- mysql8和mysql5的数据驱动不一样，jdbcUrl 、driverClass配置也不同。mysql8的连接驱动向下兼容mysql5，所以也可以用此配置链接mysql5，反之mysql5的连接驱动不能使用mysql8，当出现不能向下兼容的情况时，更换为上面mysql5的驱动配置，并更改连接驱动包为mysql5（pom.xml） -->
	<bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver"></property> <!-- 这里使用mysql8的驱动连接mysql5 -->
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/log_sys?useSSL=false&amp;serverTimezone=UTC"></property>
		<property name="user" value="root"></property>
		<property name="password" value="cjshnb"></property>
		<property name="initialPoolSize" value="3"></property>
		<property name="maxPoolSize" value="6"></property>
	</bean>
	<!-- druid+mysql8连接池数据源 -->
	<bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property> <!-- 这里使用mysql8的驱动连接mysql5 -->
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/log_sys?useSSL=false&amp;serverTimezone=UTC"></property>
		<property name="username" value="root"></property>
		<property name="password" value="cjshnb"></property>
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="5" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="300" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- PSCache，并且指定每个连接上PSCache的大小(mysql数据库建议关闭) -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="-1" />
		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
		<property name="filters" value="stat" />
	</bean>


	<!-- 2) SessionFactory实例创建 -->
	<!-- 所有的配置都由spring维护(项目中不需要hibernate.cfg.xml啦) -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- a. 连接池 -->
		<property name="dataSource" ref="dataSource2"></property>

		<!-- b. hibernate常用配置： 方言、显示sql、自动建表等 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- update：有表更新，无表自动创建。create：每次都删除后重建表 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>

				<!-- 配置使用查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<!-- 配置启用二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<!-- 配置二级缓存的提供商 -->
			</props>
		</property>

		<!-- c. 映射配置 -->
		<property name="mappingLocations">
			<list>
				<value>classpath:com/logSys/entity/*.xml</value>
			</list>
		</property>
	</bean>



	<!-- 3) 事务配置 -->
	<!-- # spring自带的事务管理器类 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- # 事务增强 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" />
		</tx:attributes>
	</tx:advice>
	<!-- # AOP配置 -->
	<aop:config>
		<!-- 切点 -->
		<aop:pointcut expression="execution(* com.logSys.service.*.*(..))" id="pt" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pt" />
	</aop:config>
</beans>